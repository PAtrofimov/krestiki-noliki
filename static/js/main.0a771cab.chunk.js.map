{"version":3,"sources":["Square.js","Board.js","Game.js","index.js"],"names":["Square","props","activePrefix","active","brushWins","brush","className","onClick","value","Board","i","key","this","squares","winLine","includes","map","j","renderSquare","renderBoard","React","Component","whoWins","winLines","length","a","b","c","winner","Game","state","history","Array","fill","undefined","xIsNext","stepNumber","desc","h","slice","current","setState","concat","every","it","status","statusValue","param","isDraw","moves","reverse","step","move","row","col","activeCell","activeCellText","position","caption","jumpTo","handleClick","sortbyDesc","ReactDOM","render","document","getElementById"],"mappings":"wQAYiBA,MAVjB,SAAgBC,GACZ,IAAMC,EAAeD,EAAME,OAAS,iBAAmB,GACjDC,EAAYH,EAAMI,MAAQ,YAAa,GAC7C,OACE,4BAAQC,UAAW,SAAWJ,EAAeE,EAAWG,QAASN,EAAMM,SACpEN,EAAMO,QCsBAC,E,2KAzBAC,GAAI,IAAD,OACd,OACE,kBAAC,EAAD,CACEC,IAAKD,EACLF,MAAOI,KAAKX,MAAMY,QAAQH,GAC1BP,OAAQO,IAAME,KAAKX,MAAME,OACzBE,QAAOO,KAAKX,MAAMa,SAAUF,KAAKX,MAAMa,QAAQC,SAASL,GACxDH,QAAS,kBAAM,EAAKN,MAAMM,QAAQG,Q,oCAKzB,IAAD,OACZ,MAAO,CAAC,EAAG,EAAG,GAAGM,KAAI,SAACN,GAAD,OACnB,yBAAKJ,UAAU,aACZ,CAAC,EAAG,EAAG,GAAGU,KAAI,SAACC,GAAD,OAAO,EAAKC,aAAa,EAAIR,EAAIO,Y,+BAMpD,OAAO,6BAAML,KAAKO,mB,GAtBFC,IAAMC,WCA1B,SAASC,EAAQT,GAYf,IAXA,IAAMU,EAAW,CACf,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGAb,EAAI,EAAGA,EAAIa,EAASC,OAAQd,IAAK,CAAC,IAAD,cACtBa,EAASb,GADa,GACjCe,EADiC,KAC9BC,EAD8B,KAC3BC,EAD2B,KAExC,GAAId,EAAQY,IAAMZ,EAAQY,KAAOZ,EAAQa,IAAMb,EAAQY,KAAOZ,EAAQc,GACpE,MAAO,CAAEC,OAAQf,EAAQY,GAAIX,QAASS,EAASb,IAGnD,OAAO,K,IA6IMmB,E,kDA3Hb,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IACD6B,MAAQ,CACXC,QAAS,CAAC,CAAElB,QAAS,IAAImB,MAAM,GAAGC,KAAK,MAAO9B,YAAQ+B,IACtDC,SAAS,EACTC,WAAY,EACZC,MAAM,GANS,E,wDAUP3B,GAAI,IAAD,EAC+BE,KAAKkB,MAAhCQ,EADJ,EACLP,QAAYI,EADP,EACOA,QAASC,EADhB,EACgBA,WACvBL,EAAUO,EAAEC,MAAM,EAAGH,EAAa,GAClCI,EAAUT,EAAQA,EAAQP,OAAS,GACnCX,EAAO,YAAO2B,EAAQ3B,SACxBS,EAAQT,IAAYA,EAAQH,KAGhCG,EAAQH,GAAKyB,EAAU,IAAM,IAC7BvB,KAAK6B,SAAS,CACZV,QAASA,EAAQW,OAAO,CAAC,CAAE7B,UAASV,OAAQO,KAC5CyB,SAAUA,EACVC,WAAYL,EAAQP,Y,6BAIjBY,GACLxB,KAAK6B,SAAS,CACZL,aACAD,QAASC,EAAa,IAAM,M,mCAK9BxB,KAAK6B,SAAS,CACZJ,MAAOzB,KAAKkB,MAAMO,S,+BAIZ,IAAD,EAC4BzB,KAAKkB,MAAvBQ,EADV,EACCP,QAAYK,EADb,EACaA,WACdL,EAAUO,EAAEC,MAAM,EAAGH,EAAa,GACxC,OAAOL,EAAQA,EAAQP,OAAS,GAAGX,QAAQ8B,OAAM,SAACC,GAChD,OAAOA,O,+BAID,IAGJC,EAAQC,EAHL,SACwClC,KAAKkB,MAA5CC,EADD,EACCA,QAASI,EADV,EACUA,QAASC,EADnB,EACmBA,WAAYC,EAD/B,EAC+BA,KAChCG,EAAUT,EAAQK,GAElBW,EAAQzB,EAAQkB,EAAQ3B,SACxBe,EAAM,OAAGmB,QAAH,IAAGA,OAAH,EAAGA,EAAOnB,OAChBd,EAAO,OAAGiC,QAAH,IAAGA,OAAH,EAAGA,EAAOjC,QAEnBc,GACFiB,EAAS,cACTC,EAAW,UAAMlB,IACRhB,KAAKoC,SACdH,EAAS,qBAETA,EAAS,eACTC,EAAW,UAAMX,EAAU,IAAM,MAGnC,IAAMc,GAASZ,EAAO,YAAIN,GAASmB,UAAYnB,GAASf,KACtD,SAACmC,EAAMC,GACL,IAAMjD,EAlFd,SAAoBO,GAClB,QAAUwB,IAANxB,EACF,IAAK,IAAI2C,EAAM,EAAGA,EAAM,EAAGA,IACzB,IAAK,IAAIC,EAAM,EAAGA,EAAM,EAAGA,IACzB,GAAI,EAAID,EAAMC,IAAQ5C,EACpB,MAAO,CAAE2C,MAAKC,OAMtB,OAAO,KAuEcC,CAAWJ,EAAKhD,QACzBqD,EAAiBrD,EAAM,WAAOA,EAAOkD,IAAd,aAAsBlD,EAAOmD,IAA7B,KAAsC,GAC7DG,EAAWpB,EAAON,EAAQP,OAAS,EAAI4B,EAAOA,EAC9CM,EAAUD,EAAQ,sBACLA,EADK,YACOD,GAC3B,cAEJ,OACE,wBAAI7C,IAAK8C,GACP,4BACElD,QAAS,WACP,EAAKoD,OAAOF,KAGbC,EAAS,SAOpB,OACE,yBAAKpD,UAAU,QACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CACEO,QAAS2B,EAAQ3B,QACjBC,QAASA,EACTX,OAAQqC,EAAQrC,OAChBI,QAAS,SAACG,GACR,EAAKkD,YAAYlD,OAIvB,yBAAKJ,UAAU,aACb,6BACE,0BAAMA,UAAU,uBAAuBuC,GACvC,0BAAMvC,UAAU,6BAA6BwC,IAE/C,yBAAKxC,UAAU,gBACb,uBAAGA,UAAU,sBAAb,WACA,4BACEC,QAAS,WACP,EAAKsD,cAEPvD,UAAU,oBAET+B,EAAO,SAAW,WAGvB,4BAAKY,S,GArHI7B,IAAMC,W,MCjCzByC,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.0a771cab.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Square(props) {\r\n    const activePrefix = props.active ? \" square-active\" : \"\";\r\n    const brushWins = props.brush ? \" win-cell\": \"\";\r\n    return (\r\n      <button className={\"square\" + activePrefix + brushWins} onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  export default Square;","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        key={i}\r\n        value={this.props.squares[i]}\r\n        active={i === this.props.active}\r\n        brush={this.props.winLine ? this.props.winLine.includes(i) : false}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderBoard() {\r\n    return [0, 1, 2].map((i) => (\r\n      <div className=\"board-row\">\r\n        {[0, 1, 2].map((j) => this.renderSquare(3 * i + j))}\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderBoard()}</div>;\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport Board from \"./Board\";\r\n\r\nfunction whoWins(squares) {\r\n  const winLines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (let i = 0; i < winLines.length; i++) {\r\n    const [a, b, c] = winLines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return { winner: squares[a], winLine: winLines[i] };\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction activeCell(i) {\r\n  if (i !== undefined) {\r\n    for (let row = 0; row < 3; row++) {\r\n      for (let col = 0; col < 3; col++) {\r\n        if (3 * row + col === i) {\r\n          return { row, col };\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{ squares: new Array(9).fill(null), active: undefined }],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n      desc: false,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const { history: h, xIsNext, stepNumber } = this.state;\r\n    const history = h.slice(0, stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = [...current.squares];\r\n    if (whoWins(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([{ squares, active: i }]),\r\n      xIsNext: !xIsNext,\r\n      stepNumber: history.length,\r\n    });\r\n  }\r\n\r\n  jumpTo(stepNumber) {\r\n    this.setState({\r\n      stepNumber,\r\n      xIsNext: stepNumber % 2 === 0,\r\n    });\r\n  }\r\n\r\n  sortbyDesc() {\r\n    this.setState({\r\n      desc: !this.state.desc,\r\n    });\r\n  }\r\n\r\n  isDraw() {\r\n    const { history: h, stepNumber } = this.state;\r\n    const history = h.slice(0, stepNumber + 1);\r\n    return history[history.length - 1].squares.every((it) => {\r\n      return it;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { history, xIsNext, stepNumber, desc } = this.state;\r\n    const current = history[stepNumber];\r\n    let status, statusValue;\r\n    const param = whoWins(current.squares);\r\n    const winner = param?.winner;\r\n    const winLine = param?.winLine;\r\n\r\n    if (winner) {\r\n      status = \"The winner:\";\r\n      statusValue = `${winner}`;\r\n    } else if (this.isDraw()) {\r\n      status = \"This is the draw!\";\r\n    } else {\r\n      status = \"Next player:\";\r\n      statusValue = `${xIsNext ? \"X\" : \"O\"}`;\r\n    }\r\n\r\n    const moves = (desc ? [...history].reverse() : history).map(\r\n      (step, move) => {\r\n        const active = activeCell(step.active);\r\n        const activeCellText = active ? `(${active.row}, ${active.col})` : \"\";\r\n        const position = desc ? history.length - 1 - move : move;\r\n        const caption = position\r\n          ? `Go to step #${position} ${activeCellText}`\r\n          : \"Go to start\";\r\n\r\n        return (\r\n          <li key={position}>\r\n            <button\r\n              onClick={() => {\r\n                this.jumpTo(position);\r\n              }}\r\n            >\r\n              {caption}{\" \"}\r\n            </button>\r\n          </li>\r\n        );\r\n      }\r\n    );\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            winLine={winLine}\r\n            active={current.active}\r\n            onClick={(i) => {\r\n              this.handleClick(i);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>\r\n            <span className=\"game-history-status\">{status}</span>\r\n            <span className=\"game-history-status-value\">{statusValue}</span>\r\n          </div>\r\n          <div className=\"game-history\">\r\n            <p className=\"game-history-title\">History</p>\r\n            <button\r\n              onClick={() => {\r\n                this.sortbyDesc();\r\n              }}\r\n              className=\"game-history-btn\"\r\n            >\r\n              {desc ? \"\\u25bc\" : \"\\u25b2\"}\r\n            </button>\r\n          </div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Game from \"./Game\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}